// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.15.5
// source: rules.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 规则引擎请求
type RuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Facts         map[string]string      `protobuf:"bytes,2,rep,name=facts,proto3" json:"facts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleRequest) Reset() {
	*x = RuleRequest{}
	mi := &file_rules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleRequest) ProtoMessage() {}

func (x *RuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleRequest.ProtoReflect.Descriptor instead.
func (*RuleRequest) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{0}
}

func (x *RuleRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RuleRequest) GetFacts() map[string]string {
	if x != nil {
		return x.Facts
	}
	return nil
}

// 规则引擎响应
type RuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Results       map[string]string      `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Messages      []string               `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleResponse) Reset() {
	*x = RuleResponse{}
	mi := &file_rules_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleResponse) ProtoMessage() {}

func (x *RuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleResponse.ProtoReflect.Descriptor instead.
func (*RuleResponse) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{1}
}

func (x *RuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RuleResponse) GetResults() map[string]string {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RuleResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

// 规则定义
type RuleDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleName      string                 `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	RuleContent   string                 `protobuf:"bytes,2,opt,name=rule_content,json=ruleContent,proto3" json:"rule_content,omitempty"`
	Priority      int32                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleDefinition) Reset() {
	*x = RuleDefinition{}
	mi := &file_rules_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleDefinition) ProtoMessage() {}

func (x *RuleDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleDefinition.ProtoReflect.Descriptor instead.
func (*RuleDefinition) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{2}
}

func (x *RuleDefinition) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *RuleDefinition) GetRuleContent() string {
	if x != nil {
		return x.RuleContent
	}
	return ""
}

func (x *RuleDefinition) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// 添加规则请求
type AddRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *RuleDefinition        `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRuleRequest) Reset() {
	*x = AddRuleRequest{}
	mi := &file_rules_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRuleRequest) ProtoMessage() {}

func (x *AddRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRuleRequest.ProtoReflect.Descriptor instead.
func (*AddRuleRequest) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{3}
}

func (x *AddRuleRequest) GetRule() *RuleDefinition {
	if x != nil {
		return x.Rule
	}
	return nil
}

// 添加规则响应
type AddRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRuleResponse) Reset() {
	*x = AddRuleResponse{}
	mi := &file_rules_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRuleResponse) ProtoMessage() {}

func (x *AddRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRuleResponse.ProtoReflect.Descriptor instead.
func (*AddRuleResponse) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{4}
}

func (x *AddRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_rules_proto protoreflect.FileDescriptor

const file_rules_proto_rawDesc = "" +
	"\n" +
	"\vrules.proto\x12\x06drools\"\x9c\x01\n" +
	"\vRuleRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x124\n" +
	"\x05facts\x18\x02 \x03(\v2\x1e.drools.RuleRequest.FactsEntryR\x05facts\x1a8\n" +
	"\n" +
	"FactsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbd\x01\n" +
	"\fRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12;\n" +
	"\aresults\x18\x02 \x03(\v2!.drools.RuleResponse.ResultsEntryR\aresults\x12\x1a\n" +
	"\bmessages\x18\x03 \x03(\tR\bmessages\x1a:\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"l\n" +
	"\x0eRuleDefinition\x12\x1b\n" +
	"\trule_name\x18\x01 \x01(\tR\bruleName\x12!\n" +
	"\frule_content\x18\x02 \x01(\tR\vruleContent\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x05R\bpriority\"<\n" +
	"\x0eAddRuleRequest\x12*\n" +
	"\x04rule\x18\x01 \x01(\v2\x16.drools.RuleDefinitionR\x04rule\"E\n" +
	"\x0fAddRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xc8\x01\n" +
	"\x11RuleEngineService\x128\n" +
	"\vExecuteRule\x12\x13.drools.RuleRequest\x1a\x14.drools.RuleResponse\x12:\n" +
	"\aAddRule\x12\x16.drools.AddRuleRequest\x1a\x17.drools.AddRuleResponse\x12=\n" +
	"\fExecuteRules\x12\x13.drools.RuleRequest\x1a\x14.drools.RuleResponse(\x010\x01B\x13Z\x11drools-demo/protob\x06proto3"

var (
	file_rules_proto_rawDescOnce sync.Once
	file_rules_proto_rawDescData []byte
)

func file_rules_proto_rawDescGZIP() []byte {
	file_rules_proto_rawDescOnce.Do(func() {
		file_rules_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rules_proto_rawDesc), len(file_rules_proto_rawDesc)))
	})
	return file_rules_proto_rawDescData
}

var file_rules_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_rules_proto_goTypes = []any{
	(*RuleRequest)(nil),     // 0: drools.RuleRequest
	(*RuleResponse)(nil),    // 1: drools.RuleResponse
	(*RuleDefinition)(nil),  // 2: drools.RuleDefinition
	(*AddRuleRequest)(nil),  // 3: drools.AddRuleRequest
	(*AddRuleResponse)(nil), // 4: drools.AddRuleResponse
	nil,                     // 5: drools.RuleRequest.FactsEntry
	nil,                     // 6: drools.RuleResponse.ResultsEntry
}
var file_rules_proto_depIdxs = []int32{
	5, // 0: drools.RuleRequest.facts:type_name -> drools.RuleRequest.FactsEntry
	6, // 1: drools.RuleResponse.results:type_name -> drools.RuleResponse.ResultsEntry
	2, // 2: drools.AddRuleRequest.rule:type_name -> drools.RuleDefinition
	0, // 3: drools.RuleEngineService.ExecuteRule:input_type -> drools.RuleRequest
	3, // 4: drools.RuleEngineService.AddRule:input_type -> drools.AddRuleRequest
	0, // 5: drools.RuleEngineService.ExecuteRules:input_type -> drools.RuleRequest
	1, // 6: drools.RuleEngineService.ExecuteRule:output_type -> drools.RuleResponse
	4, // 7: drools.RuleEngineService.AddRule:output_type -> drools.AddRuleResponse
	1, // 8: drools.RuleEngineService.ExecuteRules:output_type -> drools.RuleResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_rules_proto_init() }
func file_rules_proto_init() {
	if File_rules_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rules_proto_rawDesc), len(file_rules_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rules_proto_goTypes,
		DependencyIndexes: file_rules_proto_depIdxs,
		MessageInfos:      file_rules_proto_msgTypes,
	}.Build()
	File_rules_proto = out.File
	file_rules_proto_goTypes = nil
	file_rules_proto_depIdxs = nil
}
